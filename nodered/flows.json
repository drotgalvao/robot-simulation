[
    {
        "id": "5b2daf24.2cb68",
        "type": "tab",
        "label": "Controle do Robô UR5",
        "disabled": false,
        "info": "Fluxo para controle e monitoramento do robô UR5"
    },
    {
        "id": "f6f2187d.f17ca8",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "mqtt",
        "port": "1883",
        "clientid": "nodered-supervisor",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "b4da5f39.3d433",
        "type": "postgreSQLConfig",
        "name": "Robot Database",
        "host": "postgres",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "robotdb",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "robotuser",
        "userFieldType": "str",
        "password": "robotpass",
        "passwordFieldType": "str"
    },
    {
        "id": "a7f63e97.ce069",
        "type": "mqtt in",
        "z": "5b2daf24.2cb68",
        "name": "Status do Robô",
        "topic": "robot/status",
        "qos": "0",
        "datatype": "json",
        "broker": "f6f2187d.f17ca8",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "3e8c6a97.c7c5a6",
                "d1bfefb6.fd374"
            ]
        ]
    },
    {
        "id": "3e8c6a97.c7c5a6",
        "type": "debug",
        "z": "5b2daf24.2cb68",
        "name": "Status Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 60,
        "wires": []
    },
    {
        "id": "d1bfefb6.fd374",
        "type": "function",
        "z": "5b2daf24.2cb68",
        "name": "Preparar para BD",
        "func": "// Extrai os dados do payload\nconst status = msg.payload.status;\nconst pos = msg.payload.position;\nconst message = msg.payload.message;\n\n// Cria a query SQL para inserção\nmsg.topic = \"INSERT INTO robot_status (status, position_x, position_y, position_z, message) VALUES ($1, $2, $3, $4, $5)\";\nmsg.params = [status, pos.x, pos.y, pos.z, message];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "c67b7db3.32b15"
            ]
        ]
    },
    {
        "id": "c67b7db3.32b15",
        "type": "postgresql",
        "z": "5b2daf24.2cb68",
        "name": "Salvar Status",
        "query": "",
        "postgreSQLConfig": "b4da5f39.3d433",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 520,
        "y": 120,
        "wires": [
            [
                "5f7fe1d2.4db5"
            ]
        ]
    },
    {
        "id": "5f7fe1d2.4db5",
        "type": "debug",
        "z": "5b2daf24.2cb68",
        "name": "DB Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 120,
        "wires": []
    },
    {
        "id": "e0f8e17d.442c5",
        "type": "ui_form",
        "z": "5b2daf24.2cb68",
        "name": "Mover Robô",
        "label": "Movimentação do Robô",
        "group": "4f3eb4e5.a2abbc",
        "order": 1,
        "width": "6",
        "height": "6",
        "options": [
            {
                "label": "Posição X",
                "value": "x",
                "type": "number",
                "required": true
            },
            {
                "label": "Posição Y",
                "value": "y",
                "type": "number",
                "required": true
            },
            {
                "label": "Posição Z",
                "value": "z",
                "type": "number",
                "required": true
            }
        ],
        "formValue": {
            "x": "",
            "y": "",
            "z": ""
        },
        "payload": "",
        "submit": "Mover",
        "cancel": "Cancelar",
        "topic": "robot/command",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "f69d2a3.dbd4458"
            ]
        ]
    },
    {
        "id": "f69d2a3.dbd4458",
        "type": "function",
        "z": "5b2daf24.2cb68",
        "name": "Preparar Comando",
        "func": "// Cria o comando para o robô\nmsg.payload = {\n    command: \"move\",\n    x: parseFloat(msg.payload.x),\n    y: parseFloat(msg.payload.y),\n    z: parseFloat(msg.payload.z)\n};\n\n// Prepara para o banco de dados\nconst dbMsg = {\n    topic: \"INSERT INTO robot_commands (command, position_x, position_y, position_z) VALUES ($1, $2, $3, $4)\",\n    params: [\"move\", msg.payload.x, msg.payload.y, msg.payload.z]\n};\n\n// Verifica se a posição é válida\nconst limits = {\n    x_min: -0.6,\n    x_max: 0.6,\n    y_min: -0.6,\n    y_max: 0.6,\n    z_min: 0.0,\n    z_max: 0.6\n};\n\nlet isValid = true;\nlet reason = \"\";\n\nif (msg.payload.x < limits.x_min || msg.payload.x > limits.x_max) {\n    isValid = false;\n    reason = `Valor de X (${msg.payload.x}) fora dos limites permitidos`;\n} else if (msg.payload.y < limits.y_min || msg.payload.y > limits.y_max) {\n    isValid = false;\n    reason = `Valor de Y (${msg.payload.y}) fora dos limites permitidos`;\n} else if (msg.payload.z < limits.z_min || msg.payload.z > limits.z_max) {\n    isValid = false;\n    reason = `Valor de Z (${msg.payload.z}) fora dos limites permitidos`;\n}\n\nreturn [msg, dbMsg, { payload: { isValid, reason } }];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 240,
        "wires": [
            [
                "bbec2aa3.ef3cd8"
            ],
            [
                "1d60d8a7.0b5897"
            ],
            [
                "5738b9ca.c50218"
            ]
        ]
    },
    {
        "id": "bbec2aa3.ef3cd8",
        "type": "debug",
        "z": "5b2daf24.2cb68",
        "name": "Comando Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "1d60d8a7.0b5897",
        "type": "postgresql",
        "z": "5b2daf24.2cb68",
        "name": "Salvar Comando",
        "query": "",
        "postgreSQLConfig": "b4da5f39.3d433",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "ccc8c3a2.c353"
            ]
        ]
    },
    {
        "id": "5738b9ca.c50218",
        "type": "switch",
        "z": "5b2daf24.2cb68",
        "name": "Validação",
        "property": "payload.isValid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "4f77b798.40f888"
            ],
            [
                "7e3e1f4c.dfc18"
            ]
        ]
    },
    {
        "id": "4f77b798.40f888",
        "type": "mqtt out",
        "z": "5b2daf24.2cb68",
        "name": "Enviar Comando",
        "topic": "robot/command",
        "qos": "",
        "retain": "",
        "broker": "f6f2187d.f17ca8",
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "7e3e1f4c.dfc18",
        "type": "mqtt out",
        "z": "5b2daf24.2cb68",
        "name": "Rejeitar Comando",
        "topic": "robot/response",
        "qos": "",
        "retain": "",
        "broker": "f6f2187d.f17ca8",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "ccc8c3a2.c353",
        "type": "debug",
        "z": "5b2daf24.2cb68",
        "name": "DB Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 240,
        "wires": []
    },
    {
        "id": "a6b3f3d8.9e2c5",
        "type": "ui_template",
        "z": "5b2daf24.2cb68",
        "group": "4f3eb4e5.a2abbc",
        "name": "Visualização do Robô",
        "order": 2,
        "width": "6",
        "height": "6",
        "format": "<div style=\"width: 100%; height: 100%; background-color: #f0f0f0; border-radius: 5px; display: flex; justify-content: center; align-items: center; position: relative; overflow: hidden;\">\n    <div style=\"width: 80%; height: 80%; position: relative;\">\n        <!-- Base do Robô -->\n        <div style=\"position: absolute; bottom: 0; left: 40%; width: 20%; height: 10%; background-color: #333; border-radius: 5px;\"></div>\n        \n        <!-- Eixo do Robô -->\n        <div style=\"position: absolute; bottom: 10%; left: 45%; width: 10%; height: 20%; background-color: #555; border-radius: 5px 5px 0 0;\"></div>\n        \n        <!-- Braço 1 do Robô -->\n        <div id=\"arm1\" style=\"position: absolute; bottom: 30%; left: 48%; width: 4%; height: 20%; background-color: #777; transform-origin: bottom; transform: rotate({{arm1Angle}}deg);\"></div>\n        \n        <!-- Braço 2 do Robô -->\n        <div id=\"arm2\" style=\"position: absolute; bottom: 50%; left: 48%; width: 4%; height: 20%; background-color: #999; transform-origin: bottom; transform: rotate({{arm2Angle}}deg);\"></div>\n        \n        <!-- Garra do Robô -->\n        <div id=\"gripper\" style=\"position: absolute; bottom: {{gripperBottom}}%; left: {{gripperLeft}}%; width: 8%; height: 5%; background-color: #f00; border-radius: 5px; transform-origin: bottom left; transform: rotate({{gripperAngle}}deg);\"></div>\n        \n        <!-- Coordenadas de posição -->\n        <div style=\"position: absolute; top: 5px; left: 5px; font-size: 12px; color: #333;\">\n            X: {{pos.x | number:2}}<br>\n            Y: {{pos.y | number:2}}<br>\n            Z: {{pos.z | number:2}}<br>\n            Status: {{status}}\n        </div>\n    </div>\n</div>\n\n<script>\n(function(scope) {\n    scope.$watch('msg', function(msg) {\n        if (msg && msg.payload) {\n            // Atualiza as variáveis com os dados recebidos\n            scope.pos = msg.payload.position || {x: 0, y: 0, z: 0};\n            scope.status = msg.payload.status || \"desconhecido\";\n            \n            // Calcula os ângulos para animação do braço robótico\n            // Simplificado para fins de visualização\n            let x = scope.pos.x;\n            let y = scope.pos.y;\n            let z = scope.pos.z;\n            \n            // Cálculos simplificados - não representam cinemática real\n            scope.arm1Angle = -30 + (z * 60);\n            scope.arm2Angle = -20 + (y * 40);\n            scope.gripperAngle = x * 30;\n            \n            // Posição da garra\n            scope.gripperBottom = 70 - (z * 40);\n            scope.gripperLeft = 45 + (x * 20);\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 330,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4f3eb4e5.a2abbc",
        "type": "ui_group",
        "name": "Controle do Robô UR5",
        "tab": "f2709391.60aea",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f2709391.60aea",
        "type": "ui_tab",
        "name": "Robô UR5",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
] 